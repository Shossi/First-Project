---

- name: Creating and manipulating aws instances
  hosts: localhost
  gather_facts: False
  vars_files:
          - /root/ansible/vars.yml
          - /root/ansible/secret-vars.vault
  tasks:
    - name: Install boto python package
      pip:
        name:
          - boto
        state: present
    - name: Launch instance
      amazon.aws.ec2:
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"
        key_name: "{{keypair}}"
        group: "{{security_group}}"
        instance_type: "{{instance_type}}"
        image: "{{image}}"
        wait: true
        region: "{{region}}"
        vpc_subnet_id: "{{subnet}}"
        assign_public_ip: yes
        instance_tags:
          Name: first instance
      register: first

    - name: Launching second instance
      amazon.aws.ec2:
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"
        key_name: "{{keypair}}"
        group: "{{security_group}}"
        instance_type: "{{instance_type}}"
        image: "{{image}}"
        wait: true
        region: "{{region}}"
        vpc_subnet_id: "{{subnet}}"
        assign_public_ip: yes
        instance_tags:
          Name: second instance
      register: second

    - name: Add instances to group 
      add_host:
        name: '{{ item.public_ip }}'
        groups: first_aws
      loop: "{{ first.instances }}"

    - name: Wait for SSH
      wait_for:
        host: '{{ item.public_ip }}'
        port: 22
        delay: 10
        timeout: 320
        state: started
      loop: "{{ first.instances }}"

    - name: Add instances to group
      add_host:
        name: '{{ item.public_ip }}'
        groups: second_aws
      loop: "{{ second.instances }}"

    - name: Wait for SSH
      wait_for:
        host: '{{ item.public_ip }}'
        port: 22
        delay: 10
        timeout: 320
        state: started
      loop: "{{ second.instances }}"

- hosts: first_aws
  gather_facts: true
  tasks:
    - name: running first instance role tasks
      include_role:
        name: first_instance 

- hosts: second_aws
  gather_facts: true
  tasks:
    - name: running second instance role
      include_role:
        name: second_instance
- name: 
  hosts: localhost
  connection: local
  become: false
  tasks:
    - name: Terminate instances that were previously launched #not working properly need to check again
      amazon.aws.ec2:
        region: "us-east-2"
        state: 'absent'
        instance_ids: '{{ first.instance_ids }}'
